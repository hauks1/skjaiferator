---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: svartskjaifs.skjaif.skjaiferator.no
spec:
  group: skjaif.skjaiferator.no
  names:
    kind: SvartSkjaif
    listKind: SvartSkjaifList
    plural: svartskjaifs
    singular: svartskjaif
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: SvartSkjaif is the Schema for the svartskjaifs API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: SvartSkjaifSpec defines the desired state of SvartSkjaif.
            properties:
              skjaifcontainer:
                description: Foo is an example field of SvartSkjaif. Edit svartskjaif_types.go
                  to remove/update
                properties:
                  kaffe:
                    type: string
                  kopp:
                    type: string
                  vann:
                    type: string
                type: object
            required:
            - skjaifcontainer
            type: object
          status:
            description: SvartSkjaifStatus defines the observed state of SvartSkjaif.
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: SvartSkjaif is the Schema for the svartskjaifs API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              EDIT THIS FILE!  THIS IS SCAFFOLDING FOR YOU TO OWN!
              NOTE: json tags are required.  Any new fields you add must have json tags for the fields to be serialized.
              SvartSkjaifSpec defines the desired state of SvartSkjaif.
            properties:
              kaffe:
                type: string
              kopp:
                description: |-
                  INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                type: string
              vann:
                type: string
            type: object
          status:
            description: SvartSkjaifStatus defines the observed state of SvartSkjaif.
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
